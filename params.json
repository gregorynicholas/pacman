{"name":"pacman","tagline":"pacfile proxy web server written in python. useful for developing and testing cross-domain applications. one step install, easily configured via yaml.","body":"pacman\r\n======\r\n\r\n### introduction\r\n\r\na python web proxy server to nail cross-domain application development.\r\none of the most essential utilities for the cross-domain application toolbelt\r\nsince resurrections n' shit.\r\n\r\n\r\n-----\r\n\r\n\r\n### what is it used for?\r\n\r\nit serves a local server, which proxies requests from one domain to another.\r\n\r\nthis would allow a developer to work locally, and be able to route all requests\r\nto `somedomain.com` to a server of their choice, eliminating the need to modify\r\nthe `/etc/hosts` file, or configuring local domain name servers.\r\n\r\n\r\n### how does it work?\r\nrun the proxy server and navigate to the url `http://localhost:3128/pacman.pac`\r\nfile will best illustrate how the javascript-like syntax will work:\r\n    `pacman`\r\n\r\n\r\n### use cases?\r\n- useful for developing and testing domains and sub-domains on a local machine.\r\n- debug cross domain cookies\r\n- debug iframe message passing\r\n\r\n\r\n-----\r\n\r\n\r\n### usage\r\n\r\n    pacman [options] ...\r\n\r\n    OPTIONS:\r\n      --host=HOST           host name to bind the proxy server to.\r\n      --port=PORT           port to bind the proxy server to.\r\n      --max-threads         maximum number of active threads.\r\n      --log-level           logging output level.defaulst\r\n      --proxy-config        proxy configuration yaml file.\r\n\r\n\r\n-----\r\n\r\n\r\n### links\r\n\r\n* [docs](http://gregorynicholas.github.io/pacman)\r\n* [source](http://github.com/gregorynicholas/pacman)\r\n* [package](http://packages.python.org/pacman)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}